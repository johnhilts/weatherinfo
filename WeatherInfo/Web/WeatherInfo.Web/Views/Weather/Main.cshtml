@using WeatherInfo.Application.Models.Weather
@model MainViewModel
@{
    ViewBag.Title = "Main";
}

<div data-ng-app="weather-main" data-ng-controller="locationController" data-ng-init="init()">
        <h2>
            Weather by Location &nbsp; &nbsp;
            <button type="button" class="btn btn-info" data-ng-click="showAddLocationForm()">
                <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
            </button>
        </h2>

        <div modal="showModal" close="modalCancel()">
            <div class="col-md-3"></div>
            <add-location class="col-md-6"></add-location>
            <div class="col-md-3"></div>
        </div>

    <div class="alert alert-success" role="alert" data-ng-show="addSuccess" data-ng-cloak>
        <button type="button" class="close" aria-label="Close" data-ng-click="addLocationAlertReset()"><span aria-hidden="true">&times;</span></button>
        Location saved.
    </div>

    <div class="alert alert-danger" role="alert" data-ng-show="addFail" data-ng-cloak>
        <button type="button" class="close" aria-label="Close" data-ng-click="addLocationAlertReset()"><span aria-hidden="true">&times;</span></button>
        Location save failed.
    </div>

    <div data-ng-controller="weatherController" data-ng-init="init()">
        <input type="hidden" data-ng-model="unitType" />
        <div>
            <span data-ng-show="isEditMode"><a data-ng-click="setEditMode(!isEditMode)" class="setEditMode">Cancel Edit</a><br /><br /></span>
            <ul class="list-group" data-ng-repeat="locationData in locations" data-ng-cloak>
                <li class="list-group-item">
                    <span class="badge"><span data-ng-cloak><location-Temperature get-weather="getWeather(locationData, successCallback)" latitude="{{locationData.latitude}}" longitude="{{locationData.longitude}}"></location-Temperature></span>&deg; <span data-ng-cloak>{{unitType}}</span></span>
                    <span data-ng-show="isEditMode">
                        <button type="button" class="btn btn-danger" data-ng-click="removeLocation()">
                            <span class="glyphicon glyphicon-minus" aria-hidden="true"></span>
                        </button>
                        &nbsp;
                    </span>
                    <span data-ng-cloak>{{locationData.inputName}} ({{locationData.city}}), {{locationData.state}}&nbsp;{{locationData.country}}</span>
                    <br /><span>(as of {{locationData.temperatureTimeText}})</span>
                </li>
            </ul>
            <span data-ng-show="isEditMode"><a data-ng-click="setEditMode(!isEditMode)" class="setEditMode">Cancel Edit</a><br /><br /></span>
            <span data-ng-show="isLoading">loading...</span>
            <span data-ng-show="isIos() && !isLoading">Pull up to get more data</span>
            <a data-ng-show="showGetMore && !isIos() && !isLoading" data-ng-click="getLocations()">... get more ...</a>
        </div>

    </div>
</div>

@section scripts
{
@Scripts.Render("~/js/main/WeatherController.js")
@Scripts.Render("~/js/main/LocationController.js")
@Scripts.Render("~/js/main/WeatherService.js")
@Scripts.Render("~/js/main/LocationService.js")
@Scripts.Render("~/js/main/GeoLocationService.js")
@Scripts.Render("~/js/main/CommonService.js")
<script>
    var editObserver =
        function () {
            var appContainer = $("div[data-ng-app='weather-main']");
            var scope = angular.element(appContainer).scope();
            scope.$apply(function () {
                scope.isEditMode = weatherInfo.isEditMode();
            });
        };
    $("#setEditMode").click(editObserver);
    $(".setEditMode").click(function () { weatherInfo.setEditMode(!weatherInfo.isEditMode()); });
</script>
}
